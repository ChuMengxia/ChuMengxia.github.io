<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>从零开始的群机器人部署之旅</title>
      <link href="/posts/e24b42b0"/>
      <url>/posts/e24b42b0</url>
      
        <content type="html"><![CDATA[<h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h1><p>嗯 好久没写博客了</p><p>实在是没啥可写</p><p>博主入坑鸣潮已有段时间 乐在其中</p><p>逛论坛时总觉得群机器人生成的图比小程序好看</p><p>可博主深度社恐又不想加群</p><p>于是便有了本文</p><h1 id="1-在QQ开放平台创建机器人"><a href="#1-在QQ开放平台创建机器人" class="headerlink" title="1.在QQ开放平台创建机器人"></a>1.在QQ开放平台创建机器人</h1><p>首先使用面对面建群创建一个只有自己的群</p><p>(自已为群主或管理员且群成员不超过20的群亦可)</p><p>打开<a href="https://q.qq.com/#/">QQ开放平台</a>注册并登录账号</p><p>然后向下翻 找到<code>创建机器人</code> 填写相关信息完成创建</p><p>随后在<code>沙箱配置</code>中选择即将添加机器人的群</p><p>使用该<a href="https://iplark.com/myip">网页</a>查询自己的IP并添加到开发管理的IP白名单中</p><p>之后在移动端QQ打开该群 进入右上角菜单选择群机器人 再切换到其他 便能将刚刚创建的机器人添加到群中</p><h1 id="2-安装nonebot"><a href="#2-安装nonebot" class="headerlink" title="2.安装nonebot"></a>2.安装nonebot</h1><p>在电脑上安装<a href="https://www.python.org/downloads/">python</a>(版本大于等于3.9) <a href="https://git-scm.com/downloads">git</a></p><p>打开终端 执行以下命令以安装pipx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --user pipx</span><br><span class="line">python -m pipx ensurepath</span><br></pre></td></tr></table></figure><p>然后执行以下命令以安装nonebot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipx install nb-cli</span><br></pre></td></tr></table></figure><h1 id="3-使用nonebot创建机器人"><a href="#3-使用nonebot创建机器人" class="headerlink" title="3.使用nonebot创建机器人"></a>3.使用nonebot创建机器人</h1><p>在想要创建机器人的目录打开终端 运行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb create</span><br></pre></td></tr></table></figure><p>随后进入创建项目的流程</p><p>1.模板选择<code>bootstrap</code></p><p>2.名称随意</p><p>3.适配器选择<code>QQ(QQ官方机器人)</code> (使用上下方向键移动 空格选定 回车提交)</p><p>4.驱动器选择<code>FastAPI  HTTPX webscokets</code></p><p>5.后两项都选择<code>是</code></p><p>6.内置插件选择<code>echo</code></p><p>提示完成则创建成功</p><h1 id="4-连接至官方机器人并测试"><a href="#4-连接至官方机器人并测试" class="headerlink" title="4.连接至官方机器人并测试"></a>4.连接至官方机器人并测试</h1><p><em>本部分内容参考<a href="https://blog.csdn.net/weixin_58403216/article/details/144715878">文章</a></em></p><p>在部署机器人的目录打开终端 运行以下命令来安装适配器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot-adapter-qq</span><br></pre></td></tr></table></figure><p>打开目录中的<code>.env.prod</code>文件 在末尾粘贴如下代码 其中的id token secret字段请自行替换为QQ开放平台中所提供的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">QQ_BOTS=&#x27;</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;id&quot;: &quot;xxx&quot;,</span><br><span class="line">    &quot;token&quot;: &quot;xxx&quot;,</span><br><span class="line">    &quot;secret&quot;: &quot;xxx&quot;,</span><br><span class="line">    &quot;intent&quot;: &#123;</span><br><span class="line">      &quot;c2c_group_at_messages&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;use_websocket&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure><p>在目录中创建文件<code>bot.py</code> 写入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.qq <span class="keyword">import</span> Adapter <span class="keyword">as</span> QQAdapter</span><br><span class="line"> </span><br><span class="line">nonebot.init()</span><br><span class="line"> </span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(QQAdapter)</span><br><span class="line"> </span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">&#x27;echo&#x27;</span>, <span class="string">&#x27;single_session&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">nonebot.load_from_toml(<span class="string">&quot;pyproject.toml&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    nonebot.run()</span><br></pre></td></tr></table></figure><p>在本目录打开终端 执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run --reload</span><br></pre></td></tr></table></figure><p>观察提示 若有形如 QQ | Bot {id} connected的输出说明连接成功</p><p>可以在QQ群中发送格式为”@机器人 &#x2F;echo 任意内容”的消息来测试</p><p>机器人回复相同内容则测试通过</p><h1 id="5-安装并启动GScore"><a href="#5-安装并启动GScore" class="headerlink" title="5.安装并启动GScore"></a>5.安装并启动GScore</h1><p>打开终端 执行如下命令来安装uv(用于安装与启动GScore)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install uv</span><br></pre></td></tr></table></figure><p>然后使用cd命令切换至本地部署机器人的目录的上一级 执行如下命令来安装GScore及其依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Genshin-bots/gsuid_core.git --depth=1 --single-branch</span><br><span class="line">uv sync</span><br><span class="line">uv run python -m ensurepip</span><br></pre></td></tr></table></figure><p>安装完成后cd至gsuid_core 运行如下命令来启动它</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uv run core</span><br></pre></td></tr></table></figure><h1 id="6-通过网页控制台安装插件"><a href="#6-通过网页控制台安装插件" class="headerlink" title="6.通过网页控制台安装插件"></a>6.通过网页控制台安装插件</h1><p>在运行上面的命令后找到<strong>WebConsole挂载成功</strong>的输出 通过后面的链接访问网页控制台</p><p>默认的用户及密码均为root</p><p>登录后进入插件管理下载所需插件</p><p>(热门游戏的群机器人插件都在这了)</p><p>同时挂载到公网的相关设置也可以通过网页控制台进行调整</p><p>将IP改为0.0.0.0并放行服务器端口(修改IP的配置文件为gsuid_core&#x2F;data&#x2F;config.json)</p><p>之后重启GScore</p><h1 id="7-将GScore连接至nonebot"><a href="#7-将GScore连接至nonebot" class="headerlink" title="7.将GScore连接至nonebot"></a>7.将GScore连接至nonebot</h1><p>在已部署机器人的目录中打开终端并运行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot-plugin-genshinuid</span><br></pre></td></tr></table></figure><p>随后使用nb run启动机器人即可</p><h1 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h1><p>按照所安装插件对应的命令就可以随意地使用群机器人了！！！</p><p>写得还是比较粗糙啊 凑合能看吧</p><p>要搞到公网估计得在服务器上搞吧</p><p>对了 开放平台那个密钥好像还有时间限制</p><p>果然真是自己玩啊</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码小白的建站历程</title>
      <link href="/posts/b4ba7576"/>
      <url>/posts/b4ba7576</url>
      
        <content type="html"><![CDATA[<h1 id="0-契机"><a href="#0-契机" class="headerlink" title="0.契机"></a>0.契机</h1><p>在临近暑假结束的一天 我们的博主心不在焉地做着暑假作业</p><p>不知为何 他想起了前一天晚上看的几个大佬的博客</p><p>突然打了鸡血的他决定：</p><p><strong>我也要去整个Blog</strong></p><p>于是 他在手机上发起了搜索 不久 一篇教程便出现在荧幕上</p><p>博主略微看了看 心想 “似乎能冲？！”</p><p>反手便唤醒了前些天刚遭他蹂躏的 <del>win8</del> win10 平板</p><p>而本站的故事 也由此拉开帷幕</p><h1 id="1-Github上的前期准备"><a href="#1-Github上的前期准备" class="headerlink" title="1.Github上的前期准备"></a>1.Github上的前期准备</h1><p>服务器什么的就不用想了啦</p><p>再加上Github又不是不能用</p><p>二话不说 上号！</p><p>跟着教程新建了Repositories</p><p>在完善的用户界面加持下虽然语言不通但感觉不算太差</p><p>But 接下来的 才是真正的challenge</p><h1 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2.环境搭建"></a>2.环境搭建</h1><p>本站是依托hexo搭建的</p><p>而此框架必须要安装Node.js和Git</p><p>“装两个软件而已嘛 小case啦”</p><p>开始时这么想的我很快就不行了（手动狗头）</p><p>Node.js倒是一遍过 这个Git折腾了好一会</p><p>查了无数的网站 试了无数的方法 结果还是报着错</p><p>（这个<del>嫌疑人</del>的<del>反侦察意识</del>很高，让他的浏览器在退出时清除了历史记录，所以我们仍未知道他到底走了多少弯路）</p><p>突然 在使用了一个神奇的方法之后</p><p>它就好了 <strong>就好了！！！</strong></p><p>当时给我激动的</p><p>然后创建ssh密钥、绑Github账号一气呵成</p><p>甚至于连可能很耗时的框架安装也很快搞定了</p><p>只能说是玄学</p><h1 id="3-hexo的本地预览与……"><a href="#3-hexo的本地预览与……" class="headerlink" title="3.hexo的本地预览与……."></a>3.hexo的本地预览与…….</h1><p>hexo框架是有默认页面的</p><p>如果安装正确 启动本地服务器就能看到</p><p>虽然略微折腾了一下</p><p>但它出现的那一刻</p><p>我觉得已经无限接近于成功</p><p>但这个本地预览 死活推不上网</p><p>一度十分迷茫</p><p>抱着错误信息全网跑 方法挨个挨个试 却未有转机</p><p>后来放弃了搜索引擎 重新看教程</p><p>还别说 真让我这个盲生发现了华点</p><p>在绑Github账号时 教程只让我右键打开Git Bash</p><p><strong>没说在哪右键打开</strong></p><p>“是不是要在博客目录搞哦” I guessed</p><p>于是经过了一番回退与重试</p><p>再次输入那行命令</p><p>居然成了！</p><p>就…….离谱 但鸡冻</p><h1 id="4-hexo主题安装与调试"><a href="#4-hexo主题安装与调试" class="headerlink" title="4.hexo主题安装与调试"></a>4.hexo主题安装与调试</h1><p>个人博客嘛 讲究的就是一个<del>骚气</del> 设计感</p><p>就我目前这个水平 不可能自己搞出来</p><p>所以套一个现成的主题不失为一个选择</p><p>第一个选择的主题不是正在使用的这个</p><p>（想找出来截个屏来着 找不到了 嘤）</p><p>因为不管我咋搞中文标题都无法正确显示所以放弃了这个</p><p>这个主题我都很折腾了一番</p><p>它的首页上给了两种安装方法</p><blockquote><p>方法一：一行命令</p><p>方法二：下载压缩包并解压+配套操作</p></blockquote><p>我以为这两种方法最终效果是相同的</p><p>结果我跑完命令发现没有配置文件</p><p>（也许是我没会玩吧）</p><p>按方法二就行了</p><p>开始应该是配置文件哪里改错了</p><p>后面操作开始报错</p><p>然后从压缩包里把原始文件拖出来再改</p><p>又摸索了一阵</p><p>才有了现在的亚子</p><p>也是实属不易</p><h1 id="5-后记"><a href="#5-后记" class="headerlink" title="5.后记"></a>5.后记</h1><p>现在也只能说是勉强能看吧</p><p>后面还要慢慢改</p><p>而且这个框架对本地环境的依赖性很高</p><p>但是这平板也许不知什么时候我就碰不到了</p><p>anyway 慢慢来吧</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
